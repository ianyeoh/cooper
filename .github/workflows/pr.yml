# This workflow will do a clean installation of node dependencies, run unit tests, generate code coverage, cache them,
# then comment them on the PR. On every subsequent commit to the PR, it will comment the coverage difference between the base
# branch of the PR.
name: pr

on: [pull_request]

jobs:
  base-branch:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install Node.js v22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Run linter
        run: pnpm run lint

      - name: Run tests and coverage
        run: pnpm run ci

      - name: Upload code coverage for ref branch
        uses: actions/upload-artifact@v4
        with:
          name: backend-ref-lcov.info
          path: packages/backend/coverage/lcov.info
          if-no-files-found: error

  checks:
    runs-on: ubuntu-latest
    needs: base-branch
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Use Node.js v22.x
        uses: actions/setup-node@v4
        with:
          node-version: v22.x

      - name: Download code coverage report from base branch
        uses: actions/download-artifact@v4
        with:
          name: backend-ref-lcov.info

      - name: Install dependencies
        run: pnpm install

      - name: Run linter
        run: pnpm run lint

      - name: Build and compile
        run: pnpm run build

      - name: Run tests and coverage
        run: pnpm run ci

      #  Compares two code coverage files and generates report as a comment
      - name: Generate Code Coverage report
        id: code-coverage
        uses: barecheck/code-coverage-action@v1
        with:
          barecheck-github-app-token: ${{ secrets.BARECHECK_GITHUB_APP_TOKEN }}
          lcov-file: "packages/backend/coverage/lcov.info"
          base-lcov-file: "lcov.info"
          minimum-ratio: 0 # Fails Github action once code coverage is decreasing
          send-summary-comment: true
          show-annotations: "warning" # Possible options warning|error
